let express,dotenv,path,connectDB,cors,erroResponserHandler,invalidPathHandler,userRoutes,postRoutes;_488‍.w("express",[["default",["express"],function(v){express=v}]]);_488‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_488‍.w("path",[["default",["path"],function(v){path=v}]]);_488‍.w("./config/db",[["default",["connectDB"],function(v){connectDB=v}]]);_488‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_488‍.w("./middleware/errorHandler",[["erroResponserHandler",["erroResponserHandler"],function(v){erroResponserHandler=v}],["invalidPathHandler",["invalidPathHandler"],function(v){invalidPathHandler=v}]]);_488‍.w("./routes/userRoutes",[["default",["userRoutes"],function(v){userRoutes=v}]]);_488‍.w("./routes/postRoutes",[["default",["postRoutes"],function(v){postRoutes=v}]]);







//Route



dotenv.config();
connectDB();


/*const app = express();: This line creates an instance of the Express.js 
application by calling the express function. This instance (app) will be 
used to define routes, middleware, and handle HTTP requests and responses.*/
const app = express();
app.use(cors());
app.use(express.json());

app.get('/', (req, res) => {
	res.send("Server is running...");
});

app.use('/api/users', userRoutes);
app.use('/api/posts', postRoutes);


app.use(invalidPathHandler);
app.use(erroResponserHandler);

app.use("/uploads", express.static(path.join(__dirname, "/uploads")));

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => console.log(`Server is running on port ${PORT}`));